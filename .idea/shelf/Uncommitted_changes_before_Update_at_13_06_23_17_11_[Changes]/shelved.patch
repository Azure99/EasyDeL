Index: EasyDel/utils/utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from . import is_jax_available\n\nif is_jax_available():\n    import jax\n    import jax.numpy as jnp\n    import numpy as np\n\n    from jax.experimental.pjit import pjit\n\n\n    def make_shard_and_gather_fns(partition_specs, dtype_specs=None):\n        float_dtypes = (jnp.bfloat16, jnp.float16, jnp.float32, jnp.float64)\n\n        def make_to_dtype_fn(dtype_spec):\n            def to_dtype(tensor):\n                if dtype_specs in float_dtypes and getattr(tensor, 'dtype', None) in float_dtypes:\n                    return tensor.astype(dtype_specs)\n                elif hasattr(dtype_spec, 'dtype') and hasattr(tensor, 'dtype'):\n                    return tensor.astype(dtype_spec.dtype)\n                return tensor\n\n            return to_dtype\n\n        def make_shard_fn(partition_spec, dtype_spec=None):\n            jax_shard_function = pjit(\n                make_to_dtype_fn(dtype_spec),\n                in_shardings=None,\n                out_shardings=partition_spec\n            )\n\n            def shard_fn(tensor):\n                return jax_shard_function(tensor).block_until_ready()\n\n            return shard_fn\n\n        def make_gather_fn(partition_spec, dtype_spec=None):\n            jax_gather_fn = pjit(\n                make_to_dtype_fn(dtype_spec),\n                in_shardings=partition_spec,\n                out_shardings=None\n            )\n\n            def gather_fn(tensor):\n                return jax.device_get(jax_gather_fn(tensor))\n\n            return gather_fn\n\n        if dtype_specs is None or dtype_specs in float_dtypes:\n            shard_fns = jax.tree_util.tree_map(make_shard_fn, partition_specs)\n            gather_fns = jax.tree_util.tree_map(make_gather_fn, partition_specs)\n        else:\n            shard_fns = jax.tree_util.tree_map(\n                make_shard_fn, partition_specs, dtype_specs\n            )\n            gather_fns = jax.tree_util.tree_map(\n                make_gather_fn, partition_specs, dtype_specs\n            )\n        return shard_fns, gather_fns\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/EasyDel/utils/utils.py b/EasyDel/utils/utils.py
--- a/EasyDel/utils/utils.py	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ b/EasyDel/utils/utils.py	(date 1686663573399)
@@ -1,58 +1,82 @@
-from . import is_jax_available
-
-if is_jax_available():
-    import jax
-    import jax.numpy as jnp
-    import numpy as np
+import jax
+import jax.numpy as jnp
+import numpy as np
 
-    from jax.experimental.pjit import pjit
+from jax.experimental.pjit import pjit, with_sharding_constraint as wsc
+from jax.interpreters import pxla
 
 
-    def make_shard_and_gather_fns(partition_specs, dtype_specs=None):
-        float_dtypes = (jnp.bfloat16, jnp.float16, jnp.float32, jnp.float64)
+def make_shard_and_gather_fns(partition_specs, dtype_specs=None):
+    float_dtypes = (jnp.bfloat16, jnp.float16, jnp.float32, jnp.float64)
 
-        def make_to_dtype_fn(dtype_spec):
-            def to_dtype(tensor):
-                if dtype_specs in float_dtypes and getattr(tensor, 'dtype', None) in float_dtypes:
-                    return tensor.astype(dtype_specs)
-                elif hasattr(dtype_spec, 'dtype') and hasattr(tensor, 'dtype'):
-                    return tensor.astype(dtype_spec.dtype)
-                return tensor
+    def make_to_dtype_fn(dtype_spec):
+        def to_dtype(tensor):
+            if dtype_specs in float_dtypes and getattr(tensor, 'dtype', None) in float_dtypes:
+                return tensor.astype(dtype_specs)
+            elif hasattr(dtype_spec, 'dtype') and hasattr(tensor, 'dtype'):
+                return tensor.astype(dtype_spec.dtype)
+            return tensor
 
-            return to_dtype
+        return to_dtype
 
-        def make_shard_fn(partition_spec, dtype_spec=None):
-            jax_shard_function = pjit(
-                make_to_dtype_fn(dtype_spec),
-                in_shardings=None,
-                out_shardings=partition_spec
-            )
+    def make_shard_fn(partition_spec, dtype_spec=None):
+        jax_shard_function = pjit(
+            make_to_dtype_fn(dtype_spec),
+            in_shardings=None,
+            out_shardings=partition_spec
+        )
 
-            def shard_fn(tensor):
-                return jax_shard_function(tensor).block_until_ready()
+        def shard_fn(tensor):
+            return jax_shard_function(tensor).block_until_ready()
 
-            return shard_fn
+        return shard_fn
 
-        def make_gather_fn(partition_spec, dtype_spec=None):
-            jax_gather_fn = pjit(
-                make_to_dtype_fn(dtype_spec),
-                in_shardings=partition_spec,
-                out_shardings=None
-            )
+    def make_gather_fn(partition_spec, dtype_spec=None):
+        jax_gather_fn = pjit(
+            make_to_dtype_fn(dtype_spec),
+            in_shardings=partition_spec,
+            out_shardings=None
+        )
 
-            def gather_fn(tensor):
-                return jax.device_get(jax_gather_fn(tensor))
+        def gather_fn(tensor):
+            return jax.device_get(jax_gather_fn(tensor))
 
-            return gather_fn
+        return gather_fn
 
-        if dtype_specs is None or dtype_specs in float_dtypes:
-            shard_fns = jax.tree_util.tree_map(make_shard_fn, partition_specs)
-            gather_fns = jax.tree_util.tree_map(make_gather_fn, partition_specs)
-        else:
-            shard_fns = jax.tree_util.tree_map(
-                make_shard_fn, partition_specs, dtype_specs
-            )
-            gather_fns = jax.tree_util.tree_map(
-                make_gather_fn, partition_specs, dtype_specs
-            )
-        return shard_fns, gather_fns
+    if dtype_specs is None or dtype_specs in float_dtypes:
+        shard_fns = jax.tree_util.tree_map(make_shard_fn, partition_specs)
+        gather_fns = jax.tree_util.tree_map(make_gather_fn, partition_specs)
+    else:
+        shard_fns = jax.tree_util.tree_map(
+            make_shard_fn, partition_specs, dtype_specs
+        )
+        gather_fns = jax.tree_util.tree_map(
+            make_gather_fn, partition_specs, dtype_specs
+        )
+    return shard_fns, gather_fns
+
+
+def get_names_from_parition_spec(partition_specs):
+    names = set()
+    if isinstance(partition_specs, dict):
+        partition_specs = partition_specs.values()
+    for item in partition_specs:
+        if item is None:
+            continue
+        elif isinstance(item, str):
+            names.add(item)
+        else:
+            names.update(get_names_from_parition_spec(item))
+
+    return list(names)
+
+
+def names_in_mesh(*names):
+    return set(names) <= set(pxla.thread_resources.env.physical_mesh.axis_names)
+
+
+def with_sharding_constraint(x, partition_specs):
+    axis_names = get_names_from_parition_spec(partition_specs)
+    if names_in_mesh(*axis_names):
+        x = wsc(x, partition_specs)
+    return x
Index: EasyDel/modules/gpt_j/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from .modelling_gpt_j import FlaxGPTJModel, FlaxGPTJModule, FlaxGPTJForCausalLMModule, FlaxGPTJForCausalLM, GPTJConfig\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/EasyDel/modules/gpt_j/__init__.py b/EasyDel/modules/gpt_j/__init__.py
--- a/EasyDel/modules/gpt_j/__init__.py	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ b/EasyDel/modules/gpt_j/__init__.py	(date 1686662970961)
@@ -1,1 +1,2 @@
-from .modelling_gpt_j import FlaxGPTJModel, FlaxGPTJModule, FlaxGPTJForCausalLMModule, FlaxGPTJForCausalLM, GPTJConfig
+from .modelling_gpt_j_flax import FlaxGPTJModel, FlaxGPTJModule, FlaxGPTJForCausalLMModule, FlaxGPTJForCausalLM, \
+    GPTJConfig
Index: pyproject.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[build-system]\nrequires = [\"setuptools>=46.4.0\", \"wheel>=0.34.2\", \"torch>=1.13.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.black]\nline-length = 88\ntarget-version = [\"py36\", \"py37\", \"py38\", \"py39\", \"py310\"]\n\n[tool.isort]\nline_length = 88\nmulti_line_output = 3\ninclude_trailing_comma = true\nforce_grid_wrap = 0\nuse_parentheses = true\nensure_newline_before_comments = true\nknown_third_party = [\"torch\"]\n\n[tool.flake8]\nmax-line-length = 88\n[tool.poetry]\n# other poetry parameters...\nreadme = \"README.md\"\n[tool.mypy]\nignore_missing_imports = true\nwarn_unused_configs = true\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pyproject.toml b/pyproject.toml
--- a/pyproject.toml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ b/pyproject.toml	(date 1686662970957)
@@ -4,7 +4,7 @@
 
 [tool.black]
 line-length = 88
-target-version = ["py36", "py37", "py38", "py39", "py310"]
+target-version = ["py38", "py39", "py310"]
 
 [tool.isort]
 line_length = 88
@@ -13,7 +13,7 @@
 force_grid_wrap = 0
 use_parentheses = true
 ensure_newline_before_comments = true
-known_third_party = ["torch"]
+known_third_party = ["torch", 'jax', 'flax']
 
 [tool.flake8]
 max-line-length = 88
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,76 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="DuplicatedCode" enabled="true" level="WEAK WARNING" enabled_by_default="true">
-      <Languages>
-        <language minSize="253" name="Python" />
-      </Languages>
-    </inspection_tool>
-    <inspection_tool class="PyCompatibilityInspection" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="ourVersions">
-        <value>
-          <list size="3">
-            <item index="0" class="java.lang.String" itemvalue="3.9" />
-            <item index="1" class="java.lang.String" itemvalue="3.10" />
-            <item index="2" class="java.lang.String" itemvalue="3.11" />
-          </list>
-        </value>
-      </option>
-    </inspection_tool>
-    <inspection_tool class="PyPackageRequirementsInspection" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="ignoredPackages">
-        <value>
-          <list size="15">
-            <item index="0" class="java.lang.String" itemvalue="erutils" />
-            <item index="1" class="java.lang.String" itemvalue="beautifulsoup4" />
-            <item index="2" class="java.lang.String" itemvalue="pandas" />
-            <item index="3" class="java.lang.String" itemvalue="transformers" />
-            <item index="4" class="java.lang.String" itemvalue="packaging" />
-            <item index="5" class="java.lang.String" itemvalue="datasets" />
-            <item index="6" class="java.lang.String" itemvalue="numpy" />
-            <item index="7" class="java.lang.String" itemvalue="dataset" />
-            <item index="8" class="java.lang.String" itemvalue="psutil" />
-            <item index="9" class="java.lang.String" itemvalue="deepspeed" />
-            <item index="10" class="java.lang.String" itemvalue="dataclasses" />
-            <item index="11" class="java.lang.String" itemvalue="scikit-learn" />
-            <item index="12" class="java.lang.String" itemvalue="moviepy" />
-            <item index="13" class="java.lang.String" itemvalue="pefile" />
-            <item index="14" class="java.lang.String" itemvalue="loralib" />
-          </list>
-        </value>
-      </option>
-    </inspection_tool>
-    <inspection_tool class="PyPep8Inspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
-      <option name="ignoredErrors">
-        <list>
-          <option value="E731" />
-          <option value="E402" />
-        </list>
-      </option>
-    </inspection_tool>
-    <inspection_tool class="PyPep8NamingInspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
-      <option name="ignoredErrors">
-        <list>
-          <option value="N812" />
-          <option value="N801" />
-          <option value="N806" />
-        </list>
-      </option>
-    </inspection_tool>
-    <inspection_tool class="PyShadowingBuiltinsInspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
-      <option name="ignoredNames">
-        <list>
-          <option value="input" />
-        </list>
-      </option>
-    </inspection_tool>
-    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="ignoredIdentifiers">
-        <list>
-          <option value="int.tolist" />
-          <option value="random.random.random" />
-        </list>
-      </option>
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
Index: .github/workflows/python-package.yml
===================================================================
diff --git a/.github/workflows/python-package.yml b/.github/workflows/python-package.yml
deleted file mode 100644
--- a/.github/workflows/python-package.yml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,40 +0,0 @@
-# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
-# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
-
-name: Python package
-
-on:
-  push:
-    branches: [ "main" ]
-  pull_request:
-    branches: [ "main" ]
-
-jobs:
-  build:
-
-    runs-on: ubuntu-latest
-    strategy:
-      fail-fast: false
-      matrix:
-        python-version: ["3.8", "3.9", "3.10"]
-
-    steps:
-    - uses: actions/checkout@v3
-    - name: Set up Python ${{ matrix.python-version }}
-      uses: actions/setup-python@v3
-      with:
-        python-version: ${{ matrix.python-version }}
-    - name: Install dependencies
-      run: |
-        python -m pip install --upgrade pip
-        python -m pip install flake8 pytest
-        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
-    - name: Lint with flake8
-      run: |
-        # stop the build if there are Python syntax errors or undefined names
-        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
-        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
-        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
-    - name: Test with pytest
-      run: |
-        pytest
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: .idea/EasyDeL.iml
===================================================================
diff --git a/.idea/EasyDeL.iml b/.idea/EasyDeL.iml
deleted file mode 100644
--- a/.idea/EasyDeL.iml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/EasyDL.iml" filepath="$PROJECT_DIR$/.idea/EasyDL.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
-</project>
\ No newline at end of file
Index: .idea/EasyDL.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/EasyDL.iml b/.idea/EasyDL.iml
deleted file mode 100644
--- a/.idea/EasyDL.iml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module version="4">
-  <component name="NewModuleRootManager">
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/profiles_settings.xml	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ /dev/null	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <settings>
-    <option name="USE_PROJECT_PROFILE" value="false" />
-    <version value="1.0" />
-  </settings>
-</component>
\ No newline at end of file
Index: setup.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from setuptools import setup, find_packages\n\nsetup(\n    name='EasyDeL',\n    version='0.0.0',\n    author='Erfan Zare Chavoshi',\n    author_email='erfanzare82@eyahoo.com',\n    description='An open-source library to make training faster and more optimized',\n    url='https://github.com/erfanzar/EasyDL',\n    packages=find_packages(),\n    long_description=open('README.md').read(),\n    long_description_content_type='text/markdown',\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'Intended Audience :: Developers',\n        'Topic :: Scientific/Engineering :: Artificial Intelligence',\n        'License :: OSI Approved :: Apache Software License',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n    ],\n    keywords='machine learning, deep learning, pytorch',\n    install_requires=[\n        'torch>=1.13.0',\n        # add any other required dependencies here\n    ],\n    python_requires='>=3.6',\n)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/setup.py b/setup.py
--- a/setup.py	(revision 79795317c269ebf1daafb505f1db27ecd0643352)
+++ b/setup.py	(date 1686662853532)
@@ -2,10 +2,10 @@
 
 setup(
     name='EasyDeL',
-    version='0.0.0',
+    version='0.0.1',
     author='Erfan Zare Chavoshi',
     author_email='erfanzare82@eyahoo.com',
-    description='An open-source library to make training faster and more optimized',
+    description='An open-source library to make training faster and more optimized in Jax/Flax',
     url='https://github.com/erfanzar/EasyDL',
     packages=find_packages(),
     long_description=open('README.md').read(),
@@ -16,8 +16,6 @@
         'Topic :: Scientific/Engineering :: Artificial Intelligence',
         'License :: OSI Approved :: Apache Software License',
         'Programming Language :: Python :: 3',
-        'Programming Language :: Python :: 3.6',
-        'Programming Language :: Python :: 3.7',
         'Programming Language :: Python :: 3.8',
         'Programming Language :: Python :: 3.9',
         'Programming Language :: Python :: 3.10',
@@ -27,5 +25,5 @@
         'torch>=1.13.0',
         # add any other required dependencies here
     ],
-    python_requires='>=3.6',
+    python_requires='>=3.8',
 )
diff --git a/EasyDel/modules/mosaic_mpt/__init__.py b/EasyDel/modules/mosaic_mpt/__init__.py
new file mode 100644
diff --git a/EasyDel/modules/gpt_j/modelling_gpt_j.py b/EasyDel/modules/gpt_j/modelling_gpt_j_flax.py
rename from EasyDel/modules/gpt_j/modelling_gpt_j.py
rename to EasyDel/modules/gpt_j/modelling_gpt_j_flax.py
diff --git a/EasyDel/modules/mosaic_mpt/modelling_mpt_flax.py b/EasyDel/modules/mosaic_mpt/modelling_mpt_flax.py
new file mode 100644
